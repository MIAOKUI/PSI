theme(panel.background=element_blank(),
axis.ticks = element_blank(),
plot.margin=unit(c(-1,-1,0,0), "cm"),
axis.text = element_blank(),
axis.title = element_blank())
textPlot
bottonPlot <- ggplot(df,environment = environment()) +
geom_rect(aes(xmin=start,xmax=end,ymin=0.2,ymax=1.2),fill ="gray",colour="black") +
geom_segment(aes(x=end,xend=end + c(newInList,0), y=0.7,yend=0.7)) +
geom_segment(aes(x=1,xend=1000,y=0.15,yend=0.15)) +
geom_text(aes(x=500,y=0.1, label = "1Kb")) +
xlim(1,max(df.merge$endGap)) +
theme(panel.background=element_blank(),
axis.ticks = element_blank(),
plot.margin=unit(c(-0.6,0,0,0), "cm"),
axis.text = element_blank(),
axis.title= element_blank(),
axis.line = element_blank())
bottonPlot
cor_dat <- data.frame(x = rep(1.5,length(newGr$newGrange)),
y=seq(from=3,to=1,length.out=length(newGr$newGrange)),
label = paste(newGr$exonic,newGr$coordinate,sep = "  "))
cor_dat
corPlot <- ggplot(cor_dat) +
geom_text(aes(x=x,y=y,label=label,fontface="bold")) +
theme(panel.background=element_blank(),
axis.ticks = element_blank(),
plot.margin=unit(c(2,1,1,1), "cm"),
axis.text = element_blank(),
axis.title= element_blank(),
axis.line = element_blank())
corPlot
g.upPlot <- ggplotGrob(upPlot)
g.textPlot <- ggplotGrob(textPlot)
g.medPlot <- ggplotGrob(medPlot)
g.bottonPlot <- ggplotGrob(bottonPlot)
cleg <- g.upPlot$grobs[[8]]
aleg <- ggplotGrob(corPlot)
upPlot <- upPlot  + theme(legend.position = "none")
g.upPlot <- ggplotGrob(upPlot)
maxWidth <- unit.pmax(g.upPlot$widths,g.textPlot$widths,g.medPlot$widths,g.bottonPlot$width)
g.upPlot$widths <- maxWidth
g.textPlot$widths <- maxWidth
g.medPlot$widths <- maxWidth
g.bottonPlot$widths <- maxWidth
total.notLangend <- arrangeGrob(g.upPlot,
g.textPlot,
g.medPlot,
g.bottonPlot,
heights = c(5.8/10,0.1/10,1/10,2/10),
nrow = 4)
print(total.notLangend)
total.legend <- arrangeGrob(cleg,aleg,nrow=2)
total.grob <- arrangeGrob(total.notLangend,
total.legend,nrow=1,  widths = c(9/10,2/10))
total.grob
plot(total.grop)
plot(total.grob)
source("./psi_plot_vis.r")
psiPlot(tmpAnnot, gene_id, tmpPsi)
plot(psiPlot(tmpAnnot, gene_id, tmpPsi) )
plot(psiPlot(tmpAnnot, gene_id, tmpPsi) )
source("./psi_plot_vis.r")
sampleTableName = "./sampleTable.csv"
psiFolder ="./troponint_psi/"
exonicPartMatrixPath ="./genes.flat.gtf"
gene_id = "ENSRNOG00000033734"
as.group = "yes"
psiTable <- importPSI(sampleTableName, psiFolder)
geneAnnot <- getGenesAnot(gene_id, exonicPartMatrixPath)
genePsi <- getGenesPsi(gene_id, psiTable)
psiPlot(geneAnnot, gene_id, genePsi)
plot(psiPlot(geneAnnot, gene_id, genePsi))
plot(psiPlot(geneAnnot, gene_id, genePsi))
source("./psi_plot_vis.r")
sampleTableName = "./sampleTable.csv"
psiFolder ="./troponint_psi/"
exonicPartMatrixPath ="./genes.flat.gtf"
gene_id = "ENSRNOG00000033734"
as.group = "yes"
psiTable <- importPSI(sampleTableName, psiFolder)
geneAnnot <- getGenesAnot(gene_id, exonicPartMatrixPath)
genePsi <- getGenesPsi(gene_id, psiTable)
psiTable <- importPSI(sampleTableName, psiFolder)
geneAnnot <- getGenesAnot(gene_id, exonicPartMatrixPath)
genePsi <- getGenesPsi(gene_id, psiTable)
plot(psiPlot(geneAnnot, gene_id, genePsi))
warnings(())
warnings()
sampleTable <- read.csv(sampleTableName, stringsAsFactors = FALSE)
vGroup <- sampleTable$Group
names(vGroup) <- sampleTable$SampleName
vGroup
melt(genePsi)
genesPsi
genesPsi <- psiTable[ grep(gene_id, rownames(psiTable)),]
genesPsi
melt(genePsi)
genePsiM <- melt(genePsi)
names(genePsiM) <- c("exonID", "SampleName", "PSI")
genePsiM$group <- vGroup[genePsiM$exonID]
genePsiM$group
genePsiM
genesPsi <- psiTable[ grep(gene_id, rownames(psiTable)),]
genePsiM <- melt(genePsi)
names(genePsiM) <- c("exonID", "SampleName", "PSI")
genePsiM$group <- vGroup[ genePsiM$SampleName ]
genePsiM
genePsiM
genesPsi
str(genePsi)
str(genePsiM)
?melt
genePsiM$SampleName
genePsiM$group <- vGroup[ as.charactor(genePsiM$SampleName) ]
genePsiM$group <- vGroup[ as.charactors(genePsiM$SampleName) ]
genePsiM$group <- vGroup[ as.character(genePsiM$SampleName) ]
genePsiM$group
require(plyr)
?genePsiSum
?ddply
head(genePsiM)
ddply(genePsiM, .(exonID, group),
.fun = function(x){
psi_mean = mean(PSI)
})
ddply(genePsiM, .(exonID, group),
.fun = function(x){
psi_mean = mean(PSI)
return(psi_mean)
})
ddply(genePsiM, .(exonID, group),
.fun = function(){
psi_mean = mean(PSI)
return(psi_mean)
})
ddply(genePsiM, .(exonID, group),
.fun = function(x){
psi_mean = mean(PSI)
return(psi_mean)
}, x)
ddply(genePsiM, .(exonID, group),
.fun = function(x){
psi_mean = mean(x$PSI)
return(psi_mean)
})
ddply(genePsiM, .(exonID, group),
.fun = function(x){
psi_mean = mean(x$PSI)
})
?reshape
reshape(genePsiM, idvar =c("exonID") )
reshape(genePsiM, idvar =c("exonID"), direction = 'width')
reshape(genePsiM, idvar =c("exonID"), direction = 'wide')
reshape(genePsiM,
idvar =c("exonID"),
direction = 'wide',
times = 'group')
reshape(genePsiM,
idvar ="exonID",
direction = 'wide',
times = 'group')
reshape(genePsiM,
idvar ="exonID",
direction = 'wide',
timevar = 'group')
reshape(genePsiSum,
idvar ="exonID",
direction = 'wide',
timevar = 'group')
genePsiSum
genePsiSum <- ddply(genePsiM, .(exonID, group),
.fun = function(x){
psi_mean = mean(x$PSI)
})
genePsiSum
names(genePsiSum)[3] <- "PSI"
reshape(genePsiSum,
idvar ="exonID",
direction = 'wide',
timevar = 'group')
genePsiSumLong <- reshape(genePsiSum,
idvar ="exonID",
direction = 'wide',
timevar = 'group')
getGenesPsi <- function(gene_id, psiTable, sampleTableName,as.group = FALSE){
sampleTable <- read.csv(sampleTableName, stringsAsFactors = FALSE)
vGroup <- sampleTable$Group
names(vGroup) <- sampleTable$SampleName
if(as.group){
genesPsi <- psiTable[ grep(gene_id, rownames(psiTable)),]
genePsiM <- melt(genePsi)
names(genePsiM) <- c("exonID", "SampleName", "PSI")
genePsiM$group <- vGroup[ as.character(genePsiM$SampleName) ]
genePsiSum <- ddply(genePsiM, .(exonID, group),
.fun = function(x){
psi_mean = mean(x$PSI)
})
names(genePsiSum)[3] <- "PSI"
genePsiSumLong <- reshape(genePsiSum,
idvar ="exonID",
direction = 'wide',
timevar = 'group')
rownames(genePsiSumLong) <- genePsiSumLong$exonID
genePsiSumLong$exonID <- NULL
return(genePsiSumLong)
}else{
return(genePsi)
}
}
psiTable <- importPSI(sampleTableName, psiFolder)
geneAnnot <- getGenesAnot(gene_id, exonicPartMatrixPath)
genePsi <- getGenesPsi(gene_id, psiTable,as.group)
psiTable <- importPSI(sampleTableName, psiFolder)
geneAnnot <- getGenesAnot(gene_id, exonicPartMatrixPath)
genePsi <- getGenesPsi(gene_id,sampleTableName,psiTable,as.group)
plot(psiPlot(geneAnnot, gene_id, genePsi))
getGenesPsi(gene_id,psiTable,sampleTableName,as.group)
source("./psi_plot_vis.r")
genePsi <- getGenesPsi(gene_id,psiTable,sampleTableName,as.group)
genePsi <- getGenesPsi(gene_id, psiTable, sampleTableName,as.group )
getGenesPsi <- function(gene_id, psiTable, sampleTableName,as.group = FALSE){
sampleTable <- read.csv(sampleTableName, stringsAsFactors = FALSE)
vGroup <- sampleTable$Group
names(vGroup) <- sampleTable$SampleName
if(as.group){
genesPsi <- psiTable[ grep(gene_id, rownames(psiTable)),]
genePsiM <- melt(genePsi)
names(genePsiM) <- c("exonID", "SampleName", "PSI")
genePsiM$group <- vGroup[ as.character(genePsiM$SampleName) ]
genePsiSum <- ddply(genePsiM, .(exonID, group),
.fun = function(x){
psi_mean = mean(x$PSI)
})
names(genePsiSum)[3] <- "PSI"
genePsiSumLong <- reshape(genePsiSum,
idvar ="exonID",
direction = 'wide',
timevar = 'group')
rownames(genePsiSumLong) <- genePsiSumLong$exonID
genePsiSumLong$exonID <- NULL
return(genePsiSumLong)
}else{
return(genePsi)
}
}
getGenesPsi(gene_id, psiTable, sampleTableName,as.group
getGenesPsi(gene_id, psiTable, sampleTableName,as.group )
getGenesPsi <- function(gene_id, psiTable, sampleTableName,as.group = FALSE){
sampleTable <- read.csv(sampleTableName, stringsAsFactors = FALSE)
vGroup <- sampleTable$Group
names(vGroup) <- sampleTable$SampleName
if(as.group == TRUE){
genesPsi <- psiTable[ grep(gene_id, rownames(psiTable)),]
genePsiM <- melt(genePsi)
names(genePsiM) <- c("exonID", "SampleName", "PSI")
genePsiM$group <- vGroup[ as.character(genePsiM$SampleName) ]
genePsiSum <- ddply(genePsiM, .(exonID, group),
.fun = function(x){
psi_mean = mean(x$PSI)
})
names(genePsiSum)[3] <- "PSI"
genePsiSumLong <- reshape(genePsiSum,
idvar ="exonID",
direction = 'wide',
timevar = 'group')
rownames(genePsiSumLong) <- genePsiSumLong$exonID
genePsiSumLong$exonID <- NULL
return(genePsiSumLong)
}else{
return(genePsi)
}
}
getGenesPsi(gene_id, psiTable, sampleTableName,as.group )
genePsi <- getGenesPsi(gene_id, psiTable, sampleTableName,as.group )
genePsi
plot(psiPlot(geneAnnot, gene_id, genePsi))
genePsi
source("./psi_plot_vis.r")
genePsi <- getGenesPsi(gene_id, psiTable, sampleTableName,as.group = TRUE )
sampleTableName = "./sampleTable.csv"
psiFolder ="./troponint_psi/"
exonicPartMatrixPath ="./genes.flat.gtf"
gene_id = "ENSRNOG00000033734"
as.group = TRUE
getGenesPsi(gene_id, psiTable, sampleTableName,as.group = TRUE )
genePsi <- getGenesPsi(gene_id, psiTable, sampleTablePath,as.group = TRUE )
getGenesPsi(gene_id, psiTable, sampleTablePath,as.group  )
getGenesPsi <- function(gene_id, psiTable, sampleTableName, as.group = FALSE){
sampleTable <- read.csv(sampleTableName, stringsAsFactors = FALSE)
vGroup <- sampleTable$Group
names(vGroup) <- sampleTable$SampleName
if(as.group == TRUE){
genesPsi <- psiTable[ grep(gene_id, rownames(psiTable)),]
genePsiM <- melt(genePsi)
names(genePsiM) <- c("exonID", "SampleName", "PSI")
genePsiM$group <- vGroup[ as.character(genePsiM$SampleName) ]
genePsiSum <- ddply(genePsiM, .(exonID, group),
.fun = function(x){
psi_mean = mean(x$PSI)
})
names(genePsiSum)[3] <- "PSI"
genePsiSumLong <- reshape(genePsiSum,
idvar ="exonID",
direction = 'wide',
timevar = 'group')
rownames(genePsiSumLong) <- genePsiSumLong$exonID
genePsiSumLong$exonID <- NULL
return(genePsiSumLong)
}else{
return(genePsi)
}
}
getGenesPsi(gene_id, psiTable, sampleTableName, as.group)
genePsi <- getGenesPsi(gene_id, psiTable, sampleTableName, as.group)
plot(psiPlot(geneAnnot, gene_id, genePsi))
source("./psi_plot_vis.r")
sampleTablePath = "./sampleTable.csv"
psiFolder ="./troponint_psi/"
exonicPartMatrixPath ="./genes.flat.gtf"
gene_id = "ENSRNOG00000033734"
as.group = TRUE
psiTable <- importPSI(sampleTableName, psiFolder)
geneAnnot <- getGenesAnot(gene_id, exonicPartMatrixPath)
genePsi <- getGenesPsi(gene_id, psiTable, sampleTableName, as.group)
plot(psiPlot(geneAnnot, gene_id, genePsi))
setwd("G:/Working/RNA-SEQ/seb/psi_plot_script")
source("./psi_plot_vis.r")
sampleTablePath = "./sampleTable.csv"
psiFolder ="./troponint_psi/"
exonicPartMatrixPath ="./genes.flat.gtf"
gene_id = "ENSRNOG00000033734"
as.group = TRUE
psiTable <- importPSI(sampleTableName, psiFolder)
geneAnnot <- getGenesAnot(gene_id, exonicPartMatrixPath)
genePsi <- getGenesPsi(gene_id, psiTable, sampleTableName, as.group)
plot(psiPlot(geneAnnot, gene_id, genePsi))
psiTable <- importPSI(sampleTableName, psiFolder)
psiTable <- importPSI(sampleTablePath, psiFolder)
geneAnnot <- getGenesAnot(gene_id, exonicPartMatrixPath)
genePsi <- getGenesPsi(gene_id, psiTable, sampleTableName, as.group)
plot(psiPlot(geneAnnot, gene_id, genePsi))
genePsi <- getGenesPsi(gene_id, psiTable, sampleTableName, as.group)
genePsi <- getGenesPsi(gene_id, psiTable, sampleTablePath, as.group)
getGenesPsi <- function(gene_id, psiTable, sampleTablePath, as.group){
sampleTable <- read.csv(sampleTablePath, stringsAsFactors = FALSE)
vGroup <- sampleTable$Group
names(vGroup) <- sampleTable$SampleName
if(as.group == TRUE){
genesPsi <- psiTable[ grep(gene_id, rownames(psiTable)),]
genePsiM <- melt(genePsi)
names(genePsiM) <- c("exonID", "SampleName", "PSI")
genePsiM$group <- vGroup[ as.character(genePsiM$SampleName) ]
genePsiSum <- ddply(genePsiM, .(exonID, group),
.fun = function(x){
psi_mean = mean(x$PSI)
})
names(genePsiSum)[3] <- "PSI"
genePsiSumLong <- reshape(genePsiSum,
idvar ="exonID",
direction = 'wide',
timevar = 'group')
rownames(genePsiSumLong) <- genePsiSumLong$exonID
genePsiSumLong$exonID <- NULL
return(genePsiSumLong)
}else{
return(genePsi)
}
}
genePsi <- getGenesPsi(gene_id, psiTable, sampleTableName = sampleTablePath, as.group)
genePsi <- getGenesPsi(gene_id, psiTable, sampleTablePath, as.group)
genePsi <- getGenesPsi(gene_id, psiTable, sampleTablePath, as.group)
getGenesPsi <- function(gene_id, psiTable, sampleTablePath, as.group){
sampleTable <- read.csv(sampleTablePath, stringsAsFactors = FALSE)
vGroup <- sampleTable$Group
names(vGroup) <- sampleTable$SampleName
genesPsi <- psiTable[ grep(gene_id, rownames(psiTable)),]
if(as.group == TRUE){
genePsiM <- melt(genePsi)
names(genePsiM) <- c("exonID", "SampleName", "PSI")
genePsiM$group <- vGroup[ as.character(genePsiM$SampleName) ]
genePsiSum <- ddply(genePsiM, .(exonID, group),
.fun = function(x){
psi_mean = mean(x$PSI)
})
names(genePsiSum)[3] <- "PSI"
genePsiSumLong <- reshape(genePsiSum,
idvar ="exonID",
direction = 'wide',
timevar = 'group')
rownames(genePsiSumLong) <- genePsiSumLong$exonID
genePsiSumLong$exonID <- NULL
return(genePsiSumLong)
}else{
return(genePsi)
}
}
genePsi <- getGenesPsi(gene_id, psiTable, sampleTablePath, as.group)
getGenesPsi <- function(gene_id, psiTable, sampleTablePath, as.group){
sampleTable <- read.csv(sampleTablePath, stringsAsFactors = FALSE)
vGroup <- sampleTable$Group
names(vGroup) <- sampleTable$SampleName
genesPsi <- psiTable[ grep(gene_id, rownames(psiTable)),]
if(as.group == TRUE){
genePsiM <- melt(genePsi)
names(genePsiM) <- c("exonID", "SampleName", "PSI")
genePsiM$group <- vGroup[ as.character(genePsiM$SampleName) ]
genePsiSum <- ddply(genePsiM, .(exonID, group),
.fun = function(x){
psi_mean = mean(x$PSI)
})
names(genePsiSum)[3] <- "PSI"
genePsiSumLong <- reshape(genePsiSum,
idvar ="exonID",
direction = 'wide',
timevar = 'group')
rownames(genePsiSumLong) <- genePsiSumLong$exonID
genePsiSumLong$exonID <- NULL
return(genePsiSumLong)
}else{
return(genesPsi)
}
}
genePsi <- getGenesPsi(gene_id, psiTable, sampleTablePath, as.group)
getGenesPsi <- function(gene_id, psiTable, sampleTablePath, as.group){
sampleTable <- read.csv(sampleTablePath, stringsAsFactors = FALSE)
vGroup <- sampleTable$Group
names(vGroup) <- sampleTable$SampleName
genesPsi <- psiTable[ grep(gene_id, rownames(psiTable)),]
if(as.group == TRUE){
genePsiM <- melt(genesPsi)
names(genePsiM) <- c("exonID", "SampleName", "PSI")
genePsiM$group <- vGroup[ as.character(genePsiM$SampleName) ]
genePsiSum <- ddply(genePsiM, .(exonID, group),
.fun = function(x){
psi_mean = mean(x$PSI)
})
names(genePsiSum)[3] <- "PSI"
genePsiSumLong <- reshape(genePsiSum,
idvar ="exonID",
direction = 'wide',
timevar = 'group')
rownames(genePsiSumLong) <- genePsiSumLong$exonID
genePsiSumLong$exonID <- NULL
return(genePsiSumLong)
}else{
return(genesPsi)
}
}
genePsi <- getGenesPsi(gene_id, psiTable, sampleTablePath, as.group)
plot(psiPlot(geneAnnot, gene_id, genePsi))
getwd()
source("./psi_plot_vis.r")
sampleTablePath = "./sampleTable.csv"
psiFolder ="./troponint_psi/"
exonicPartMatrixPath ="./genes.flat.gtf"
gene_id = "ENSRNOG00000033734"
as.group = TRUE
psiTable <- importPSI(sampleTablePath, psiFolder)
geneAnnot <- getGenesAnot(gene_id, exonicPartMatrixPath)
genePsi <- getGenesPsi(gene_id, psiTable, sampleTablePath, as.group)
plot(psiPlot(geneAnnot, gene_id, genePsi))
genePsi <- getGenesPsi(gene_id, psiTable, sampleTablePath, as.group)
traceback()
getGenesPsi(gene_id = gene_id,
psiTable = psiTable,
sampleTablePath = sampleTablePath,
as.group = TRUE)
source("./psi_plot_vis.r")
genePsi <- getGenesPsi(gene_id = gene_id,
psiTable = psiTable,
sampleTablePath = sampleTablePath,
as.group = TRUE)
genePsi
source("./psi_plot_vis.r")
sampleTablePath = "./sampleTable.csv"
psiFolder ="./troponint_psi/"
exonicPartMatrixPath ="./genes.flat.gtf"
gene_id = "ENSRNOG00000033734"
as.group = TRUE
psiTable <- importPSI(sampleTablePath, psiFolder)
geneAnnot <- getGenesAnot(gene_id, exonicPartMatrixPath)
genePsi <- getGenesPsi(gene_id = gene_id,
psiTable = psiTable,
sampleTablePath = sampleTablePath,
as.group = TRUE)
source("./psi_plot_vis.r")
sampleTablePath = "./sampleTable.csv"
psiFolder ="./troponint_psi/"
exonicPartMatrixPath ="./genes.flat.gtf"
gene_id = "ENSRNOG00000033734"
as.group = TRUE
psiTable <- importPSI(sampleTablePath, psiFolder)
geneAnnot <- getGenesAnot(gene_id, exonicPartMatrixPath)
genePsi <- getGenesPsi(gene_id = gene_id,
psiTable = psiTable,
sampleTablePath = sampleTablePath,
as.group = TRUE)
plot(psiPlot(geneAnnot, gene_id, genePsi))
source("./psi_plot_vis.r")
sampleTablePath = "./sampleTable.csv"
psiFolder ="./troponint_psi/"
exonicPartMatrixPath ="./genes.flat.gtf"
gene_id = "ENSRNOG00000033734"
as.group = TRUE
psiTable <- importPSI(sampleTablePath, psiFolder)
geneAnnot <- getGenesAnot(gene_id, exonicPartMatrixPath)
genePsi <- getGenesPsi(gene_id = gene_id,
psiTable = psiTable,
sampleTablePath = sampleTablePath,
as.group = TRUE)
plot(psiPlot(geneAnnot, gene_id, genePsi))
